initSidebarItems({"enum":[["PathFragment","Part of a path in a query. It can be an object key or an array index. See [`Error`]."]],"fn":[["progressive_hash","When we have separate values it's useful to run a progressive version of djb2 where we pretend that we're still looping over the same value"]],"macro":[["ext","Creates a new `ExtensionMap` and fills it with the passed values"],["wasm_client",""]],"mod":[["client",""],["exchanges","This module contains the default exchanges Note that they require the `default-exchanges` feature"],["types",""]],"struct":[["ClientBuilder","A builder for the artemis client"],["Error","An element in the top-level `errors` array of a response body."],["Location","Represents a location inside a query string. Used in errors. See [`Error`]."],["QueryBody","The form in which queries are sent over HTTP in most implementations. This will be built using the [`GraphQLQuery`] trait normally."],["QueryError","A query error wrapper that allows for cheap and easy cloning across threads If a `std::error::Error` is needed, use `QueryError.compat()`"],["Response","The generic shape taken by the responses of GraphQL APIs."]],"trait":[["GraphQLQuery","A convenience trait that can be used to build a GraphQL request body. This will be implemented for you by codegen. It is implemented on the struct you place the derive on."]]});