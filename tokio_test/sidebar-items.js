initSidebarItems({"fn":[["block_on","Runs the provided future, blocking the current thread until the future completes."]],"macro":[["assert_err","Asserts that the expression evaluates to `Err` and returns the error."],["assert_ok","Asserts that the expression evaluates to `Ok` and returns the value."],["assert_pending","Assert a `Poll` is pending."],["assert_ready","Assert a `Poll` is ready, returning the value."],["assert_ready_eq","Assert if a poll is ready and check for equality on the value"],["assert_ready_err","Assert a `Poll<Result<...>>` is ready and `Err`, returning the error."],["assert_ready_ok","Assert a `Poll<Result<...>>` is ready and `Ok`, returning the value."]],"mod":[["io","A mock type implementing [`AsyncRead`] and [`AsyncWrite`]."],["task","Futures task based helpers"]]});